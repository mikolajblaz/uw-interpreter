-- Arytmetyka

-- a :: Int;
-- b :: Int;
-- z :: Int;
-- d :: Int;
-- e :: Int;

a = 4;
b = 3;
-- z = 12 + 2 - 2 = 12
z = if 3 < 5 then a * 3 + 2 - 10 / (5 - 0) else 10 end;

-- e = 3 + 4 + 3 + 12 + 30 = 52
e = 3 + let { x = 30 } in a + b + z + x end;

-- d = local x = 4
d = if 5 <= 4
  then 1 + (-4) / (-3)
  else if 3 == 4 || 9 /= 2
    then let {x = 4} in x end
    else 0 / 7
    end
  end;

-- main :: Int;
main = a == 4 && b == 3 && (z == 12) && e == 52 && d == 4 && bind == b && rec == 6;

-- bad :: Int;
bad = 8 / 0;

-- undef :: Int;
undef = 3 + frt;

-- bind :: Int;
-- bind = 10 + 5 - (4 + 8) = 3
bind = let { x = 10; y = 5 } in
         x + y - let { a = 4 } in
           a + let { x = 8 } in x end
         end
       end;

-- rec :: Int
-- rec = 6
rec = let { r1 = r2; r2 = 6} in r1 end;
